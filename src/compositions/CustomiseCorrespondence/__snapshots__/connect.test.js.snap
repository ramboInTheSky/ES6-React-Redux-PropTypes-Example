// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CustomiseCorrespondence connector mapStateToProps generates the correct props 1`] = `
Object {
  "arrearsId": "foo",
  "attachmentProps": Object {
    "dictionary": Object {
      "attachCaseFile": "Add this attachment",
      "cancelLabel": "Cancel",
      "errorText": "An error has occured when uploading the files below",
      "genericErrorMessage": "We have encountered an issue whilst trying to retrieve this information, please try again later.",
      "labelText": "Attach documents",
      "mandatoryAttachment": "Mandatory attachment",
      "mandatoryAttachmentLabel": "Attach case files",
      "mandatoryAttachmentParagraph": "Manage the case files that will be attached to your correspondence",
      "removeButtonLabel": "Remove this local file",
      "removeCaseFile": "Remove this attachment",
      "retryButtonLabel": "Retry",
      "submitLabel": "Continue",
      "text": "Choose file to upload",
      "uploadSuccessMessage": "Upload successful",
    },
    "downloadedFiles": Array [],
    "hasDownloadError": false,
    "hasFileUploadErrors": false,
    "hasGeneratedCorrespondence": false,
    "mandatoryAttachments": Array [],
    "pendingFiles": Array [],
  },
  "breadcrumb": Array [
    Object {
      "href": "#{Dashboards.Core.CustomerBaseURL}",
      "id": "breadcrumb-dashboard",
      "label": "Dashboard",
    },
    Object {
      "id": "breadcrumb-arrearsDashboard",
      "label": "My arrears",
      "to": "/",
    },
    Object {
      "label": "Arrears details",
      "to": "/arrears-details/foo",
    },
    Object {
      "id": "breadcrumb-Customise correspondence",
      "label": "Customise correspondence",
    },
  ],
  "correspondenceDocuments": Array [],
  "correspondenceId": "bar",
  "didFail": false,
  "errorText": Object {
    "addressCity": "Please enter city",
    "addressLine1": "Please enter address line 1",
    "addressLine2": "Please enter address line 2",
    "addressLine3": "Please enter address line 3",
    "addressPostcode": "Please enter post code",
    "emailInvalid": "Email not valid",
    "emailMissing": "Please enter email",
    "fatalError": "Generation failed. Please contact IT",
    "mergeFieldMissingData": "Please enter data for {field}",
    "mergeFieldMissingDataInvalidData": "Validation failed for {field}",
    "mobileInvalid": "Phone not valid",
    "mobileMissing": "Please enter mobile phone",
    "noTemplateFound": "No template found, please contact your IT help desk",
    "printMethodMissing": "Please enter a print method",
    "recipient": "Please select a recipient",
    "retriableError": "Correspondence merge failed. Please retry. If the problem persists please contact IT",
    "sendingMethod": "Please select a sendingMethod",
    "template": "Please select a template",
  },
  "fatalError": false,
  "generatePreviewLoading": false,
  "generatePreviewSubmitText": "Generate Draft Correspondence",
  "genericContactITErrorText": "We have encountered an issue whilst trying to retrieve this information. If the issue persists, contact your IT team",
  "hasMediaErrors": false,
  "heading": "Customise correspondence",
  "isLoading": false,
  "labels": Object {
    "address": "Address",
    "addressCity": "City",
    "addressLine1": "Line 1",
    "addressLine2": "Line 2",
    "addressLine3": "Line 3",
    "addressPostcode": "Post code",
    "backButton": "back",
    "closeTemplate": "Close",
    "decline": "Decline",
    "emailAddress": "Email Address",
    "generateDraft": "Generate Draft Correspondence",
    "generatedCorrespondence": "Generated Correspondence",
    "letterPrintingMethods": "Letter printing methods",
    "mailingHouse": "Select a mailing house",
    "mobilePhone": "Mobile phone",
    "nextButton": "next",
    "previewTemplate": "Preview {templateName}",
    "printLocally": "Print letter(s) locally",
    "printViaMailingHouse": "Print and send letter(s) via mailing house",
    "recipient": "Correspondence recipient",
    "retryGenerateDraft": "Retry",
    "sendingMethod": "How do you want to contact 3rd party?",
    "submitButton": "submit",
    "template": "Select correspondence template",
    "viewPreview": "View preview",
    "viewPreviewsBeforeProceeding": "You need to view each of the following correspondence previews before proceeding.",
    "viewTemplate": "View selected template",
  },
  "notification": Object {
    "decline": "Correspondence not sent",
    "failure": "Correspondence failed to send",
    "success": "Correspondence sent",
  },
  "printerOptions": Array [],
  "recipient": "",
  "redirectToDetailsPage": [Function],
  "redirectToSendCorrespondence": [Function],
  "retriableError": false,
  "sendingMethod": "",
  "substitutionFields": Array [],
  "templateId": "",
  "templatePreviewImage": "",
}
`;

exports[`CustomiseCorrespondence connector mergeProps generates the correct props 1`] = `
Object {
  "arrearsId": "foo",
  "attachmentProps": Object {
    "clearMediaState": [Function],
    "dictionary": Object {
      "attachCaseFile": "Add this attachment",
      "cancelLabel": "Cancel",
      "errorText": "An error has occured when uploading the files below",
      "genericErrorMessage": "We have encountered an issue whilst trying to retrieve this information, please try again later.",
      "labelText": "Attach documents",
      "mandatoryAttachment": "Mandatory attachment",
      "mandatoryAttachmentLabel": "Attach case files",
      "mandatoryAttachmentParagraph": "Manage the case files that will be attached to your correspondence",
      "removeButtonLabel": "Remove this local file",
      "removeCaseFile": "Remove this attachment",
      "retryButtonLabel": "Retry",
      "submitLabel": "Continue",
      "text": "Choose file to upload",
      "uploadSuccessMessage": "Upload successful",
    },
    "downloadedFiles": Array [],
    "getFilesByCaseId": [Function],
    "hasDownloadError": false,
    "hasFileUploadErrors": false,
    "hasGeneratedCorrespondence": false,
    "mandatoryAttachments": Array [],
    "onChange": [Function],
    "onRemove": [Function],
    "onRetry": [Function],
    "pendingFiles": Array [],
  },
  "bar": "baz",
  "closeTemplate": [Function],
  "correspondenceDocuments": Array [],
  "correspondenceId": "bar",
  "decline": [Function],
  "errorText": Object {
    "addressCity": "Please enter city",
    "addressLine1": "Please enter address line 1",
    "addressLine2": "Please enter address line 2",
    "addressLine3": "Please enter address line 3",
    "addressPostcode": "Please enter post code",
    "emailInvalid": "Email not valid",
    "emailMissing": "Please enter email",
    "fatalError": "Generation failed. Please contact IT",
    "mergeFieldMissingData": "Please enter data for {field}",
    "mergeFieldMissingDataInvalidData": "Validation failed for {field}",
    "mobileInvalid": "Phone not valid",
    "mobileMissing": "Please enter mobile phone",
    "noTemplateFound": "No template found, please contact your IT help desk",
    "printMethodMissing": "Please enter a print method",
    "recipient": "Please select a recipient",
    "retriableError": "Correspondence merge failed. Please retry. If the problem persists please contact IT",
    "sendingMethod": "Please select a sendingMethod",
    "template": "Please select a template",
  },
  "fatalError": false,
  "generateDraft": [Function],
  "generatePreviewLoading": false,
  "generatePreviewSubmitText": "Generate Draft Correspondence",
  "genericContactITErrorText": "We have encountered an issue whilst trying to retrieve this information. If the issue persists, contact your IT team",
  "getSubstitutionFields": [Function],
  "hasMediaErrors": false,
  "history": Object {
    "push": [Function],
  },
  "isLoading": false,
  "labels": Object {
    "address": "Address",
    "addressCity": "City",
    "addressLine1": "Line 1",
    "addressLine2": "Line 2",
    "addressLine3": "Line 3",
    "addressPostcode": "Post code",
    "backButton": "back",
    "closeTemplate": "Close",
    "decline": "Decline",
    "emailAddress": "Email Address",
    "generateDraft": "Generate Draft Correspondence",
    "generatedCorrespondence": "Generated Correspondence",
    "letterPrintingMethods": "Letter printing methods",
    "mailingHouse": "Select a mailing house",
    "mobilePhone": "Mobile phone",
    "nextButton": "next",
    "previewTemplate": "Preview {templateName}",
    "printLocally": "Print letter(s) locally",
    "printViaMailingHouse": "Print and send letter(s) via mailing house",
    "recipient": "Correspondence recipient",
    "retryGenerateDraft": "Retry",
    "sendingMethod": "How do you want to contact 3rd party?",
    "submitButton": "submit",
    "template": "Select correspondence template",
    "viewPreview": "View preview",
    "viewPreviewsBeforeProceeding": "You need to view each of the following correspondence previews before proceeding.",
    "viewTemplate": "View selected template",
  },
  "match": Object {
    "params": Object {
      "arrearsId": "foo",
      "correspondenceId": "bar",
    },
  },
  "onBack": [Function],
  "onSubmit": [Function],
  "onUnmount": [Function],
  "openTemplate": [Function],
  "printerOptions": Array [],
  "progress": [Function],
  "recipient": "",
  "redirectToSendCorrespondence": [Function],
  "retriableError": false,
  "sendingMethod": "",
  "substitutionFields": Array [],
  "templateId": "",
  "templatePreviewImage": "",
  "updatePageHeader": [Function],
}
`;

exports[`CustomiseCorrespondence connector mergeProps performs the correct actions for openTemplate 1`] = `
Array [
  Array [
    "template content",
    "max-width: 80%",
  ],
]
`;
